{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://yio-remote.com/webhook.json",
    "type": "object",
    "title": "YIO Integration Webhook Schema",
    "description": "Required data points to set up a Webhook integration.",
    "definitions": {
        "headers": {
            "type": "object",
            "title": "Http headers for all commands",
            "patternProperties": {
              "^[\\w-]+": { "type": "string" }
            },
            "additionalProperties": false
        },
        "command": {
            "oneOf": [
                {
                    "type": "string",
                    "title": "Simple GET command"
                },
                {
                    "type": "object",
                    "title": "Extended command",
                    "properties": {
                        "url": {
                            "type": "string",
                            "title": "Command url",
                            "description": "Relative url to base_url, full dedicated url, or empty if base_url should be called"
                        },
                        "method": {
                            "type": "string",
                            "enum": [ "GET", "PUT", "POST", "DELETE" ],
                            "title": "HTTP method"
                        },
                        "headers": { "$ref": "#/definitions/headers" },
                        "body": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "title": "Text payload",
                                    "description": "Automatically sets 'content-type: application/json' and can be overwritten in a header definition."
                                },
                                {
                                    "type": "object",
                                    "title": "JSON payload",
                                    "description": "Automatically sets 'content-type: application/text' and can be overwritten in a header definition."
                                }
                            ]
                        },
                        "response" : {
                            "type": "object",
                            "properties": {
                                "mappings": {
                                    "type": "object",
                                    "title": "Response mappings",
                                    "description": "JSON payload mapping to entity attributes with JsonPath.",
                                    "propertyNames": {"enum": ["state_bool", "state_bin", "power", "brightness_percent", "color_temp", "color_r", "color_g", "color_b", "color_h", "color_s", "color_v", "position"]},
                                    "patternProperties": {
                                      "": { "type": "string" }
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        }
    },
    "additionalProperties": true,
    "required": [
        "base_url",
        "entities"
    ],
    "properties": {
        "base_url": {
            "$id": "#/properties/base_url",
            "type": "string",
            "format": "url",
            "title": "Base url for the webhook commands",
            "description": "The base url might be combined with a relative command url. If a command url is not relative, the base url is ignored. If the base url is empty, all command urls must be a full url.",
            "default": "",
            "examples": [
                "http://192.168.100.2:8080/relay", "https://yourdomain.com:1234"
            ]
        },
        "ssl_ignore": {
            "$id": "#/properties/ssl_ignore",
            "type": "boolean",
            "title": "Disable SSL verification",
            "description": "Set true if you want to skip SSL verification",
            "default": false
        },
        "placeholders": {
            "type": "object",
            "title": "Key value placeholders for url, headers, body",
            "description": "Placeholder keys must be specified as ${KEY}",
            "patternProperties": {
              "^[\\w-]+": { "type": "string" }
            },
            "additionalProperties": false
        },
        "headers": { "$ref": "#/definitions/headers" },
        "proxy": {
            "type": "object",
            "title": "Proxy definition",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                      "NoProxy",
                      "DefaultProxy",
                      "Socks5Proxy",
                      "HttpProxy"
                    ]
                },
                "hostName": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "entities": {
            "type": "object",
            "title": "YIO entities mapping",
            "properties": {
                "switch": {
                    "type": "array",
                    "title": "Switch items",
                    "items": {
                        "type": "object",
                        "properties": {
                            "entity_id": {
                                "type": "string"
                            },
                            "friendly_name": {
                                "type": "string"
                            },
                            "commands": {
                                "type": "object",
                                "propertyNames": { "enum": [ "ON", "OFF", "TOGGLE" ] },
                                "patternProperties": {
                                  "": { "$ref": "#/definitions/command" }
                                },
                                "additionalProperties": false
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "entity_id",
                            "friendly_name",
                            "commands"
                        ]
                    }
                },
                "light": {
                    "type": "array",
                    "title": "Light items",
                    "items": {
                        "type": "object",
                        "properties": {
                            "entity_id": {
                                "type": "string"
                            },
                            "friendly_name": {
                                "type": "string"
                            },
                            "commands": {
                                "type": "object",
                                "propertyNames": { "enum": [ "ON", "OFF", "TOGGLE", "BRIGHTNESS", "COLOR", "COLORTEMP" ] },
                                "patternProperties": {
                                  "": { "$ref": "#/definitions/command" }
                                },
                                "additionalProperties": false
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "entity_id",
                            "friendly_name",
                            "commands"
                        ]
                    }
                },
                "blind": {
                    "type": "array",
                    "title": "Blind items",
                    "items": {
                        "type": "object",
                        "properties": {
                            "entity_id": {
                                "type": "string"
                            },
                            "friendly_name": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "invert_position": {
                                        "type": "boolean"
                                    }
                                }
                            },
                            "commands": {
                                "type": "object",
                                "propertyNames": { "enum": [ "OPEN", "CLOSE", "STOP", "POSITION" ] },
                                "patternProperties": {
                                  "": { "$ref": "#/definitions/command" }
                                },
                                "additionalProperties": false
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "entity_id",
                            "friendly_name",
                            "commands"
                        ]
                    }
                }
            }
        }
    }
}
